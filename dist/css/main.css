body {
  background: #dde7ea;
  font-family: "Alata", sans-serif; }
  body h2, body p, body * {
    color: #3c4042; }

.accordion-item {
  background: white;
  border-radius: 5px;
  padding: 15px;
  box-shadow: 0 0 0 1px #ececec; }

.step, .pre-step {
  background-color: white;
  box-shadow: 0 0 0 1px #ececec;
  opacity: 1;
  transition: box-shadow .2s, opacity .4s;
  border-radius: 5px;
  margin-bottom: 15px;
  padding: 20px 25px 5px;
  cursor: pointer; }
  .step:hover, .pre-step:hover {
    box-shadow: 0 4px 10px 0 rgba(0, 0, 0, 0.11); }

.pre-step {
  background-color: #eef1f3; }
  .pre-step .questions-container {
    padding-bottom: 5px; }

.title {
  font-size: 22px; }
  .title > .subtitle {
    color: #6c757d; }
    .title > .subtitle.normal-text {
      color: #3c4042; }

.subtitle {
  font-size: 18px; }

.question {
  margin-top: 20px; }

.questions-container {
  padding: 0 60px 30px;
  counter-reset: counter; }

.question-title::before {
  counter-increment: counter;
  content: counter(counter, lower-latin) ". "; }

/*
=====
CORE STYLES
=====
*/
.toggle {
  --uiToggleSize: var(--toggleSize, 1.25rem);
  --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
  --uiToggleColor: var(--toggleColor, #222);
  display: var(--toggleDisplay, inline-flex);
  position: relative;
  outline: none;
  flex-flow: column; }

.toggle__input {
  /*
    The pattern by Sara Soueidan https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
  */
  width: var(--uiToggleSize);
  height: var(--uiToggleSize);
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  margin: 0;
  outline: none; }

/*
 1. Calculation of the gap for the custom checkbox
*/
.toggle__label {
  display: inline-flex;
  min-height: var(--uiToggleSize);
  padding-left: calc(var(--uiToggleSize) + var(--toggleIndent, .4em));
  align-items: center; }
  .toggle__label.title {
    font-size: 24px;
    flex-flow: column;
    align-items: baseline; }

.toggle__input:not(:disabled) ~ .toggle__label {
  cursor: pointer; }

.input-expand {
  transition: max-height 0.5s ease-out; }

/*
1. Ems helps to calculate size of the checkbox
*/
.page__toggle > .toggle {
  width: 100%; }

.toggle__label::before,
.toggle__label::after {
  content: "";
  box-sizing: border-box;
  width: 1em;
  height: 1em;
  font-size: var(--uiToggleSize);
  /* 1 */
  position: absolute;
  left: 0;
  top: 0; }

.toggle__label::before {
  border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
  z-index: 2; }

.toggle__input:not(:disabled) ~ .toggle__label::after {
  background-color: var(--uiToggleColor);
  opacity: 0; }

.toggle__input:not(:disabled):checked ~ .toggle__label::after {
  opacity: 1; }

.toggle__text {
  margin-top: auto;
  margin-bottom: auto; }

/*
The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle

1. Ems helps to calculate size and position of the arrow
*/
.toggle__input:not(:disabled) ~ .toggle__label .toggle__text::before {
  content: "";
  width: 0;
  height: 0;
  font-size: var(--uiToggleSize);
  /* 1 */
  border-left-width: 0;
  border-bottom-width: 0;
  border-left-style: solid;
  border-bottom-style: solid;
  border-color: var(--toggleArrowColor, #fff);
  position: absolute;
  top: .5428em;
  left: .25em;
  z-index: 3;
  transform-origin: left top;
  transform: rotate(-40deg) skew(10deg); }

.toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text::before {
  --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
  width: .4em;
  height: .2em;
  border-left-width: var(--uiToggleArrowWidth);
  border-bottom-width: var(--uiToggleArrowWidth); }

/*
States
*/
/* disabled state */
.toggle__input:disabled ~ .toggle__label {
  opacity: var(--toggleOpacityDisabled, 0.24);
  cursor: var(--toggleCursorDisabled, not-allowed); }

/*
=====
PRESENTATION STYLES
=====
*/
/* 
The demo skin
*/
.toggle__label::before,
.toggle__label::after {
  border-radius: var(--toggleBorderRadius, 2px); }

/* 
The animation of switching states
*/
.toggle__input:not(:disabled) ~ .toggle__label::before,
.toggle__input:not(:disabled) ~ .toggle__label::after {
  opacity: 1;
  transform-origin: center center;
  will-change: transform;
  transition: transform .2s ease-out; }

.toggle__input:not(:disabled) ~ .toggle__label::before {
  transform: rotateY(0deg);
  transition-delay: .2s; }

.toggle__input:not(:disabled) ~ .toggle__label::after {
  transform: rotateY(90deg); }

.toggle__input:not(:disabled):checked ~ .toggle__label::before {
  transform: rotateY(-90deg);
  transition-delay: 0s; }

.toggle__input:not(:disabled):checked ~ .toggle__label::after {
  transform: rotateY(0deg);
  transition-delay: .2s; }

.toggle__text::before {
  opacity: 0; }

.toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text::before {
  opacity: 1;
  transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s; }

/*
=====
SETTINGS
=====
*/
.toggle {
  --toggleColor:#315f50;
  --toggleBackgroundColor: #9b59b6;
  --toggleSize: 25px; }
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3NzL21haW4uc2NzcyIsIm1haW4uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVdBO0VBQ0UsbUJBWm9CO0VBYXBCLGdDQVRnQyxFQUFBO0VBT2xDO0lBS0ksY0Fmb0IsRUFBQTs7QUFtQnhCO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsNkJBQTZCLEVBQUE7O0FBRy9CO0VBQ0UsdUJBQXVCO0VBQ3ZCLDZCQUF5QztFQUN6QyxVQUFVO0VBQ1YsdUNBQXVDO0VBQ3ZDLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsc0JBQXNCO0VBQ3RCLGVBQWUsRUFBQTtFQVJqQjtJQVdJLDRDQUEyQyxFQUFBOztBQUkvQztFQUNFLHlCQUF5QixFQUFBO0VBRDNCO0lBSUksbUJBQW1CLEVBQUE7O0FBSXZCO0VBQ0UsZUEzQ29CLEVBQUE7RUEwQ3RCO0lBR0ksY0FBYyxFQUFBO0lBSGxCO01BS00sY0FBYyxFQUFBOztBQU1wQjtFQUNFLGVBckR1QixFQUFBOztBQXdEekI7RUFDRSxnQkFBZ0IsRUFBQTs7QUFHbEI7RUFDRSxvQkFBb0I7RUFDcEIsc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0UsMEJBQTBCO0VBQzFCLDJDQUEyQyxFQUFBOztBQUc3Qzs7OztDQ3pCQztBRCtCRDtFQUNFLDBDQUFlO0VBQ2Ysb0RBQXNCO0VBQ3RCLHlDQUFnQjtFQUVoQiwwQ0FBMEM7RUFDMUMsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRTs7R0M5QkM7RURpQ0QsMEJBQTBCO0VBQzFCLDJCQUEyQjtFQUMzQixVQUFVO0VBQ1Ysa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixPQUFPO0VBQ1AsU0FBUztFQUNULGFBQWEsRUFBQTs7QUFHZjs7Q0MvQkM7QURtQ0Q7RUFDRSxvQkFBb0I7RUFDcEIsK0JBQStCO0VBQy9CLG1FQUFtRTtFQUNuRSxtQkFBbUIsRUFBQTtFQUpyQjtJQU9JLGVBQWU7SUFDZixpQkFBaUI7SUFDakIscUJBQXFCLEVBQUE7O0FBSXpCO0VBQ0UsZUFBZSxFQUFBOztBQUdqQjtFQUdFLG9DQUFvQyxFQUFBOztBQVF0Qzs7Q0M1Q0M7QURnREQ7RUFDRSxXQUFXLEVBQUE7O0FBR2I7O0VBRUUsV0FBVztFQUNYLHNCQUFzQjtFQUN0QixVQUFVO0VBQ1YsV0FBVztFQUNYLDhCQUE4QjtFQUFFLE1BQUE7RUFFaEMsa0JBQWtCO0VBQ2xCLE9BQU87RUFDUCxNQUFNLEVBQUE7O0FBR1I7RUFDRSw2REFBNkQ7RUFDN0QsVUFBVSxFQUFBOztBQUdaO0VBQ0Usc0NBQXNDO0VBQ3RDLFVBQVUsRUFBQTs7QUFHWjtFQUNFLFVBQVUsRUFBQTs7QUFHWjtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUIsRUFBQTs7QUFHckI7Ozs7Q0NqREM7QUR1REQ7RUFDRSxXQUFXO0VBQ1gsUUFBUTtFQUNSLFNBQVM7RUFDVCw4QkFBOEI7RUFBRSxNQUFBO0VBRWhDLG9CQUFvQjtFQUNwQixzQkFBc0I7RUFDdEIsd0JBQXdCO0VBQ3hCLDBCQUEwQjtFQUMxQiwyQ0FBMkM7RUFFM0Msa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0VBQ1gsVUFBVTtFQUVWLDBCQUEwQjtFQUMxQixxQ0FBcUMsRUFBQTs7QUFHdkM7RUFDRSxrREFBcUI7RUFFckIsV0FBVztFQUNYLFlBQVk7RUFDWiw0Q0FBNEM7RUFDNUMsOENBQThDLEVBQUE7O0FBR2hEOztDQ3pEQztBRDZERCxtQkFBQTtBQUVBO0VBQ0UsMkNBQTBDO0VBQzFDLGdEQUFnRCxFQUFBOztBQUdsRDs7OztDQzFEQztBRGdFRDs7Q0M3REM7QURpRUQ7O0VBRUUsNkNBQTZDLEVBQUE7O0FBRy9DOztDQy9EQztBRG1FRDs7RUFFRSxVQUFVO0VBQ1YsK0JBQStCO0VBQy9CLHNCQUFzQjtFQUN0QixrQ0FBa0MsRUFBQTs7QUFHcEM7RUFDRSx3QkFBd0I7RUFDeEIscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsMEJBQTBCO0VBQzFCLG9CQUFvQixFQUFBOztBQUd0QjtFQUNFLHdCQUF3QjtFQUN4QixxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSxVQUFVO0VBQ1YscUZBQXFGLEVBQUE7O0FBR3ZGOzs7O0NDckVDO0FEMkVEO0VBQ0UscUJBQWM7RUFDZCxnQ0FBd0I7RUFDeEIsa0JBQWEsRUFBQSIsImZpbGUiOiJtYWluLmNzcyJ9 */